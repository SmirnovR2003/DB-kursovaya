{% extends 'base.html.twig' %}
{% block body %}
    <script>

        function validateEmail(email)
        {
            var re = /^[\w-\.]+@[\w-]+\.[a-z]{2,4}$/i;
            var valid = re.test(email);
            return valid;
        }

        function validateTelephone(telephone)
        {
            var re = /^[\d\+][\d\(\)\-]{4,14}\d$/;
            var valid = re.test(telephone);
            return valid;
            
        }

        function changeProfile(url, errorPageUrl) {

            const validate = true;

            const firstName = document.getElementById('profile-firstName');
            const lastName = document.getElementById('profile-lastName');
            const patronymic = document.getElementById('profile-patronymic');
            const birthday = document.getElementById('profile-birthday');
            const telephone = document.getElementById('profile-telephone');
            const email = document.getElementById('profile-email');
            const password = document.getElementById('profile-password');

            if(firstName.value == '')
            {
                firstName.classList.add("red-border");
                validate = false;
            }
            else
            {
                firstName.classList.remove("red-border");
            }

            if(lastName.value == '')
            {
                lastName.classList.add("red-border");
                validate = false;
            }
            else
            {
                lastName.classList.remove("red-border");
            }

            if(telephone.value == '' || !validateTelephone(telephone.value))
            {
                telephone.classList.add("red-border");
                validate = false;
            }
            else
            {
                telephone.classList.remove("red-border");
            }

            if(email.value == '' || !validateEmail(email.value))
            {
                email.classList.add("red-border");
                validate = false;
            }
            else
            {
                email.classList.remove("red-border");
            }

            if(password.value == '')
            {
                password.classList.add("red-border");
                validate = false;
            }
            else
            {
                password.classList.remove("red-border");
            }

            if(!validate) return;

            const data = JSON.stringify({
                firstName: document.getElementById('profile-firstName').value,
                lastName: document.getElementById('profile-lastName').value,
                patronymic: document.getElementById('profile-patronymic').value,
                birthday: document.getElementById('profile-birthday').value,
                telephone: document.getElementById('profile-telephone').value,
                email: document.getElementById('profile-email').value,
                password: document.getElementById('profile-password').value,
            });
            const xhr = new XMLHttpRequest();
            xhr.open("POST", url);
            xhr.setRequestHeader("Content-Type", "application/json; charset=UTF-8");
            xhr.onload = () => {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    window.location.reload();
                } else {
                    alert('Изменение не удалось');
                    console.log(`Error: ${xhr.status}`);
                }
            };
            xhr.send(data);
        }
    </script>
    <div class="profile-page page_content">
        {{ include('components/sidebar/sidebar.html.twig') }}
        <div class="profile page_content">
            <div class="profile page_content-row">
                <div class="profile-page">
                    <img class="profile-image" src="{{ asset(userInfo.imagePath) }}" alt="Картинка не загрузилась"/>
                    <div class="profile-info-list">
                        <div class="profile-text">Имя: <input id="profile-firstName" class="profile-text" value="{{ userInfo.firstName }}"/></div>
                        <div class="profile-text">Фамилия: <input id="profile-lastName" class="profile-text" value="{{ userInfo.lastName }}"/></div>
                        <div class="profile-text">Отчество: <input id="profile-patronymic" class="profile-text" value="{{ userInfo.patronymic }}"/></div>
                        <div class="profile-text">Дата рождения: <input id="profile-birthday" type="date" class="profile-text" value="{{ userInfo.birthday }}"/></div>
                        <div class="profile-text">Телефон: <input id="profile-telephone" type="tel" required class="profile-text" value="{{ userInfo.telephone }}"/></div>
                        <div class="profile-text">Почта: <label for="profile-email"></label><input id="profile-email" type="email" class="profile-text" value="{{ userInfo.email }}"/></div>
                        <div class="profile-text">Пароль: <input id="profile-password" type="password" class="profile-text" value="{{ userInfo.password }}"/></div>
                    </div>
                </div>
            </div>
            <div class="profile-button-container" onclick="changeProfile('{{ updateUserUrl }}', '{{ errorPageUrl }}')">
                {{ component('Button', { message: 'Изменить'}) }}
            </div>
        </div>
    </div>
{% endblock %}